1
00:00:00,595 --> 00:00:02,420
将你的数据绘制成图表很重要

2
00:00:02,420 --> 00:00:04,350
我们来看看示例 y

3
00:00:04,350 --> 00:00:08,300
这里我有十一个数据点 我在右边做成了图表

4
00:00:08,300 --> 00:00:11,830
我们可能要计算关于此数据集的一些概要统计

5
00:00:11,830 --> 00:00:16,870
如均值、方差、相关系数和最优拟合线

6
00:00:16,870 --> 00:00:21,322
现在假设我再给你具有相同概要统计的三个数据集

7
00:00:21,322 --> 00:00:23,760
像这样

8
00:00:23,760 --> 00:00:26,747
因为这些数据集的均值、

9
00:00:26,747 --> 00:00:28,918
方差、相关系数和最优拟合线相同

10
00:00:28,918 --> 00:00:32,439
所以你可能预测 可视化后 它们会十分相似

11
00:00:32,439 --> 00:00:33,820
现在我们看一下

12
00:00:33,820 --> 00:00:35,630
这些数据集有多相似？

13
00:00:35,630 --> 00:00:36,240
不是很相似

14
00:00:37,290 --> 00:00:39,510
我们可以看到曲率效应

15
00:00:39,510 --> 00:00:43,230
异常值已经严重偏离我们的概要统计

16
00:00:43,230 --> 00:00:45,830
这称为安斯库姆四重奏

17
00:00:45,830 --> 00:00:49,260
证明为数据绘制图表的重要性

18
00:00:49,260 --> 00:00:52,128
而不能只依靠概要统计

19
00:00:52,128 --> 00:00:56,560
Python 中的 matplotlib 和 R 中的 ggplot 等工具是

20
00:00:56,560 --> 00:01:00,580
形象绘制数据的不错的方法 让你在分析时可以挑选视觉图像、趋势和

21
00:01:00,580 --> 00:01:02,450
异常值

22
00:01:02,450 --> 00:01:05,950
我希望这个示例让你明白数据可视化的力量

23
00:01:05,950 --> 00:01:07,190
以及你为什么应该每天使用它

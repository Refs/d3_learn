1
00:00:00,540 --> 00:00:05,490
现在 我要转移下话题 简单介绍下网页是如何运作的

2
00:00:05,490 --> 00:00:09,070
当你在浏览器中输入 URL 时 具体发生了什么

3
00:00:09,070 --> 00:00:11,300
以及为什么你使用 D3 时 这些内容会相关

4
00:00:12,810 --> 00:00:18,320
现在我们都是在网页浏览器控制台内体验 D3 的

5
00:00:18,320 --> 00:00:21,830
一直是在操作页面上已经存在的一些元素

6
00:00:21,830 --> 00:00:23,640
当然这也很可以 也很好

7
00:00:23,640 --> 00:00:28,640
但是即便没有当前的技术库 我们也可以轻松做到

8
00:00:28,640 --> 00:00:33,170
而 D3 的特别之处就是它能轻易地载入

9
00:00:33,170 --> 00:00:37,380
并操作外部文件或外部来源的数据

10
00:00:37,380 --> 00:00:42,098
除了讨论 D3 数据载入功能的方式以外

11
00:00:42,098 --> 00:00:46,240
我还要讨论关于客户端-服务器模型的相关内容

12
00:00:46,240 --> 00:00:51,170
大部分互联网和万维网是如何顺利运行的

13
00:00:51,170 --> 00:00:56,105
一般来说 因特网内发生的所有事情都发生在

14
00:00:56,105 --> 00:00:57,820
两个或更多的电脑之间

15
00:00:57,820 --> 00:01:01,950
包括你的笔记本电脑 一些外部服务器之类的

16
00:01:01,950 --> 00:01:06,040
我们不会讲得特别具体 总体说来

17
00:01:06,040 --> 00:01:11,240
万维网就是在因特网中为所有电脑建立一个网络

18
00:01:11,240 --> 00:01:13,330
让他们能互相通信

19
00:01:13,330 --> 00:01:13,980
比如说

20
00:01:13,980 --> 00:01:21,390
如果你想登陆 D3 的首页 地址为 d3js.org

21
00:01:21,390 --> 00:01:24,380
载入 index.html 页面

22
00:01:24,380 --> 00:01:27,060
当你在浏览器中输入地址时

23
00:01:27,060 --> 00:01:33,960
浏览器由这个蓝色方框代表 网页浏览器是你笔记本本地的

24
00:01:33,960 --> 00:01:38,550
那就需要向因特网发送请求

25
00:01:38,550 --> 00:01:42,260
请求 d3.js 首页的 HTML

26
00:01:42,260 --> 00:01:48,466
通常可以在万维网中的多个或一个服务器中找到

27
00:01:48,466 --> 00:01:52,780
如果要对这个过程进行类比

28
00:01:52,780 --> 00:01:56,490
实际上 它和邮政非常类似

29
00:01:56,490 --> 00:01:57,110
我们现在假设

30
00:01:57,110 --> 00:02:01,620
处在一个没有电话和因特网的时代

31
00:02:01,620 --> 00:02:07,010
在以前 很久以前 你想要从朋友那里要一个包裹

32
00:02:07,010 --> 00:02:11,320
你需要给他们写一封信 请求他们把东西发送给你

33
00:02:11,320 --> 00:02:14,980
比如说 他们问你借的你最喜欢的书

34
00:02:14,980 --> 00:02:16,910
你可以想象一下 主机名

35
00:02:16,910 --> 00:02:23,290
也就是我们这个例子中的 d3js.org 就是建筑或酒店的地址

36
00:02:23,290 --> 00:02:25,800
或者是复合式公寓楼

37
00:02:25,800 --> 00:02:31,280
而服务器端口可以被认为是房间或公寓号码

38
00:02:31,280 --> 00:02:35,780
如果比作很久以前我们写信的话

39
00:02:35,780 --> 00:02:42,570
我们可以说是把信发到地址 d3js.org 房间号码 80

40
00:02:42,570 --> 00:02:46,640
现在我要把这个图简化一下

41
00:02:46,640 --> 00:02:50,730
以更清晰地展示这个过程和交换

42
00:02:51,900 --> 00:02:57,700
现在 我们继续将其对比为

43
00:02:57,700 --> 00:02:59,680
在没有因特网和电话的时代

44
00:02:59,680 --> 00:03:02,870
请求朋友寄送你最喜欢的书 那你需要寄一封信

45
00:03:02,870 --> 00:03:07,870
假设你是客户端 这里是笔记本电脑

46
00:03:07,870 --> 00:03:13,980
然后你寄送这封信 包括目的地地址和回信地址

47
00:03:13,980 --> 00:03:19,000
在当前例子中 你的目的地是 d3js.org 端口 80

48
00:03:19,000 --> 00:03:23,390
然后你的朋友 现在是服务器

49
00:03:23,390 --> 00:03:27,550
会寄送你的书 这里是随意的 IP

50
00:03:27,550 --> 00:03:33,540
这个就是你笔记本的标识符

51
00:03:33,540 --> 00:03:39,600
以及一个随意的端口号 这就是包裹要寄送的地址 或者其他地址和房间号

52
00:03:39,600 --> 00:03:42,780
你的朋友 也就是服务器 接收到这个请求

53
00:03:42,780 --> 00:03:46,840
或者是信 让他们把你最喜欢的书寄回去

54
00:03:46,840 --> 00:03:48,710
这个被称为请求

55
00:03:48,710 --> 00:03:51,630
然后是回复 你的朋友或者说服务器

56
00:03:51,630 --> 00:03:54,680
向你寄送你最喜欢的书

57
00:03:54,680 --> 00:03:55,820
在当前情况下

58
00:03:55,820 --> 00:04:00,690
网页的回复是像回复地址发送 HTML

59
00:04:00,690 --> 00:04:05,690
在你收到你最喜欢的书之后 在以前 你会开始阅读

60
00:04:05,690 --> 00:04:11,490
而在现代计算机时代 你接收到网页 HTML 之后

61
00:04:11,490 --> 00:04:13,420
你递交给你的浏览器

62
00:04:13,420 --> 00:04:17,149
希望你现在对客户端-服务器模型的

63
00:04:17,149 --> 00:04:22,120
请求与回复模型有了一定的了解

64
00:04:22,120 --> 00:04:26,940
也就是你 客户端 或者是你的笔记本以及网页浏览器

65
00:04:26,940 --> 00:04:31,330
向你发送请求的地址上的因特网服务器请求一个网页 它会发还你一些 HTML

66
00:04:32,330 --> 00:04:37,360
在 D3 代码的案例中 比如说

67
00:04:37,360 --> 00:04:41,870
我们通过端口80从 d3js.org 请求索引页

68
00:04:41,870 --> 00:04:46,630
这个端口是所有网页通信的默认端口 至少在 HTTP 是这样

69
00:04:46,630 --> 00:04:53,150
服务器会给你发回 index.html 网页

70
00:04:53,150 --> 00:04:59,580
里面含有 HTML、JavaScript、CSS 和一些 D3 代码 页面上还有一个图表

71
00:04:59,580 --> 00:05:04,160
如果之前所述 D3 会通过它的数据载入函数

72
00:05:04,160 --> 00:05:09,257
例如 json.csv 或 .tsv 载入外部文件

73
00:05:09,257 --> 00:05:13,650
它会向同一个地址发送第二次请求

74
00:05:13,650 --> 00:05:18,170
不一定非得是之前的服务器 但大部分时间都是

75
00:05:18,170 --> 00:05:23,180
当网页浏览器发出 AJAX 请求

76
00:05:23,180 --> 00:05:27,330
请求一些数据文件 这里是 data.json

77
00:05:27,330 --> 00:05:33,420
服务器会用另一次回复发回数据

78
00:05:33,420 --> 00:05:38,150
而 D3 会将数据载入其回调函数中 绑定 HTML 或

79
00:05:38,150 --> 00:05:43,610
SVG 再根据发回的数据绘制图表或可视化图

80
00:05:43,610 --> 00:05:47,160
所以 总结一下 当你最初请求页面时

81
00:05:47,160 --> 00:05:52,010
你的浏览器会请求主机和端口 一些网页文件

82
00:05:52,010 --> 00:05:56,110
这里就是 index.html 然后服务器会发过来

83
00:05:56,110 --> 00:05:57,860
在 HTML 页面中

84
00:05:57,860 --> 00:06:04,440
如果 D3 有外部数据载入函数 例如 d3.json

85
00:06:04,440 --> 00:06:10,110
再发出 AJAX 请求 发给相同的服务器

86
00:06:10,110 --> 00:06:15,500
或者是你后台规定的其他任何地址 在页面载入之后

87
00:06:15,500 --> 00:06:17,840
运行回调函数

88
00:06:17,840 --> 00:06:20,290
直到服务器发来它的数据

89
00:06:20,290 --> 00:06:23,700
这样就能利用发来的数据以及

90
00:06:23,700 --> 00:06:27,990
第一次回复中的 JavaScript、HTML 和 SVG 制作可视化图

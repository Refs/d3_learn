1
00:00:00,390 --> 00:00:06,060
我这里不会讲上方的 CSS 代码和下方的数据载入

2
00:00:06,060 --> 00:00:09,980
在这个例子中 我只着重讲绘制函数

3
00:00:09,980 --> 00:00:13,400
如果你想知道 CSS 或数据载入函数

4
00:00:13,400 --> 00:00:16,870
具体是如何操作的 我建议你通读

5
00:00:16,870 --> 00:00:20,990
Mike Bostock 的辅导教材 讲师注释中有链接

6
00:00:22,050 --> 00:00:26,950
我们已经了解了 Mike 在辅导教材中使用的很多函数

7
00:00:26,950 --> 00:00:34,780
我们有比例和值域、选择和属性、定义域还有 .text (文本) 函数

8
00:00:34,780 --> 00:00:39,870
前面两行定义的是图表的宽度以及柱形的高度

9
00:00:39,870 --> 00:00:44,640
第二部分的代码创建了一个线性标尺

10
00:00:44,640 --> 00:00:48,460
并将值域设定为零至我们的图表宽度

11
00:00:48,460 --> 00:00:52,850
你认真想想这些值 从零到宽度 非常有道理

12
00:00:52,850 --> 00:00:58,330
我们不希望数据点的位置超过图表中零的位置

13
00:00:58,330 --> 00:00:59,880
或者是为负

14
00:00:59,880 --> 00:01:03,250
也不希望数据点超过图表

15
00:01:03,250 --> 00:01:05,269
的最右边缘

16
00:01:05,269 --> 00:01:09,480
而这个代码的微妙之处在于

17
00:01:09,480 --> 00:01:13,990
我把它标为 x 轴比例 而变数存为 x

18
00:01:13,990 --> 00:01:20,220
本代码或其函数中没有任何东西将它定义为 x 轴

19
00:01:20,220 --> 00:01:25,360
之后我们会学习如何使用它 创建 x 值

20
00:01:25,360 --> 00:01:30,720
第三组代码设置的是我们 SVG 图表元素的宽度

21
00:01:30,720 --> 00:01:35,740
如果你还记得的话 我们之前通过硬编码

22
00:01:35,740 --> 00:01:37,350
将类别为图表的 SVG 元素编入 HTML 中

23
00:01:37,350 --> 00:01:41,180
所以 这里我们选择带有 d3.select 的图表

24
00:01:41,180 --> 00:01:44,810
然后将宽度属性变为宽度变量

25
00:01:44,810 --> 00:01:46,770
现在情况下是 420

26
00:01:46,770 --> 00:01:52,300
请记住 这个代码对应的是刚才我展示的蓝色柱形

27
00:01:52,300 --> 00:01:56,880
而蓝色柱形会根据数据值

28
00:01:56,880 --> 00:01:58,670
水平地从左至右延伸

29
00:01:58,670 --> 00:02:03,530
第28行中 对 x 调用定义域方法

30
00:02:03,530 --> 00:02:05,800
里面有很多很多内容

31
00:02:05,800 --> 00:02:10,030
首先 x 这里被创建为线性标尺

32
00:02:10,030 --> 00:02:15,100
然而 我之前有提到过 D3 的串链语法

33
00:02:15,100 --> 00:02:22,580
虽然 d3.scale.linear.range 是方法的调用 返回的是比例对象

34
00:02:22,580 --> 00:02:26,760
所以 x 实际上是个比例 而不是范围

35
00:02:26,760 --> 00:02:32,760
所以这个实际上是在调用 x 比例的定义域

36
00:02:32,760 --> 00:02:38,620
数据的定义域代表的是数据值的最小值和最大值

37
00:02:38,620 --> 00:02:42,800
你这里可以看到 我们将0

38
00:02:42,800 --> 00:02:44,960
设置为定义域的最小值

39
00:02:44,960 --> 00:02:49,440
这个 d3 max 函数将我们的数据作为第一参数

40
00:02:49,440 --> 00:02:53,510
而调用该数据的函数作为第二参数

41
00:02:53,510 --> 00:02:57,080
注意这里 这个函数用的是单一参数 d

42
00:02:57,080 --> 00:03:01,770
给到这个函数的是单个数据 数据数组中的

43
00:03:01,770 --> 00:03:07,500
一个一个数据 函数为每一个数据执行一次

44
00:03:07,500 --> 00:03:09,420
看函数内部

45
00:03:09,420 --> 00:03:14,910
d 实际上对应的是单个数据点 我们会得到它的值

46
00:03:14,910 --> 00:03:17,990
我们需要传递函数的原因

47
00:03:17,990 --> 00:03:21,230
是 D3 作为数据驱动的库

48
00:03:21,230 --> 00:03:26,100
拥有多种不同的方式 定义给定数据的定义域的最大值

49
00:03:26,100 --> 00:03:31,440
所以将这个函数设为第二个参数

50
00:03:31,440 --> 00:03:35,480
可以实现广泛使用的 max 函数 无论你的数据是怎样或者结构如何

51
00:03:35,480 --> 00:03:40,210
在函数内部 你只需要返回你想使用的

52
00:03:40,210 --> 00:03:45,980
每个数据点的值 以方便与最大值计算进行对比

53
00:03:45,980 --> 00:03:52,030
还需要注意的是 我们没有将返回的 x 定义域的值存为任何变量

54
00:03:52,030 --> 00:03:54,680
因为定义域和值域

55
00:03:54,680 --> 00:03:58,550
都会改变比例对象的内部状态

56
00:03:58,550 --> 00:04:03,150
会为对象设置一些属性 而不是返回一个值

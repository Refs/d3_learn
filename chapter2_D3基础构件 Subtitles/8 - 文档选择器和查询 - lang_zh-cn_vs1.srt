1
00:00:00,540 --> 00:00:04,420
我们可以自由控制文件对象模型 DOM

2
00:00:04,420 --> 00:00:06,230
以及 JavaScript 控制台

3
00:00:06,230 --> 00:00:08,320
还可以看到 HTML 页面

4
00:00:08,320 --> 00:00:10,800
和这个网页上所有内容的 HTML 标签

5
00:00:11,870 --> 00:00:14,190
我们输入 document (文档)

6
00:00:14,190 --> 00:00:17,870
如果我把鼠标移到控制台的 document 节点处

7
00:00:17,870 --> 00:00:20,780
HTML 视图也同样被高亮了

8
00:00:21,810 --> 00:00:24,730
我们可以看到 document 节点下的所有对象

9
00:00:24,730 --> 00:00:28,280
另外一个可用的顶级对象是 window (窗口)

10
00:00:28,280 --> 00:00:31,020
window 对应的是浏览器窗口

11
00:00:31,020 --> 00:00:35,820
而 document 对应的是加载的 HTML 页面

12
00:00:35,820 --> 00:00:40,470
使用 D3.js 时 你会通过 HTML 标签、类 或 ID

13
00:00:40,470 --> 00:00:45,530
来选择页面中的元素

14
00:00:45,530 --> 00:00:51,210
D3.js 选择页面上的元素的方式

15
00:00:51,210 --> 00:00:55,820
是基于原生 DOM 选择 API 通过原生 JavaScript 实施

16
00:00:55,820 --> 00:00:59,810
我们可以调用 document 自己的 ID 选择器函数

17
00:00:59,810 --> 00:01:02,650
来根据 id 访问某个元素

18
00:01:02,650 --> 00:01:06,190
例如这里 我可以输入 document.GetElementById

19
00:01:06,190 --> 00:01:09,040
注意 Chrome 会试图自动补全

20
00:01:09,040 --> 00:01:11,280
我想要使用的函数

21
00:01:11,280 --> 00:01:13,070
这样 我就能通过 id 选择一个元素

22
00:01:13,070 --> 00:01:18,300
我也快可以通过类名来选择多个元素 诸如此类

23
00:01:18,300 --> 00:01:21,660
所以通常你不必使用这些方法 因为已经有

24
00:01:21,660 --> 00:01:25,010
很多很棒的库 都带有选择器函数

25
00:01:25,010 --> 00:01:30,390
例如 一种叫 jQuery 的库 可以让选择 DOM 节点变得十分容易

26
00:01:31,570 --> 00:01:35,360
和 jQuery 一样 D3 也有很多用来选择 DOM 节点的方法

27
00:01:35,360 --> 00:01:37,330
所以 如果你对 jQuery 已经比较熟悉

28
00:01:37,330 --> 00:01:40,630
那么选择元素对你来说就更容易理解了

29
00:01:40,630 --> 00:01:43,630
我们来试试最简单的选择 通过 id 选择一个元素

30
00:01:44,710 --> 00:01:47,610
我想试着选择这儿的页脚元素

31
00:01:47,610 --> 00:01:49,240
右键点击页脚元素

32
00:01:49,240 --> 00:01:54,070
我们看到 HTML 源代码 可以检视元素

33
00:01:54,070 --> 00:01:56,930
对于这个例子 我选择了 h1

34
00:01:56,930 --> 00:02:00,740
我看到在 h1 之上 有一个 div 它的 id 是 footer

35
00:02:00,740 --> 00:02:05,035
要使用原生 JavaScript 选择这个页脚 我会使用

36
00:02:05,035 --> 00:02:10,110
document.getElementById 然后传入 id 即 footer

37
00:02:10,110 --> 00:02:12,550
我们在控制台中会看到一个返回值

38
00:02:12,550 --> 00:02:16,500
是一个 div 标签 其 id 等于 footer

39
00:02:16,500 --> 00:02:19,620
我们可以展开该标签 查看它的子元素

40
00:02:19,620 --> 00:02:23,250
就像我刚才右键点击页面时

41
00:02:23,250 --> 00:02:25,650
选择的那个 h1 标签

42
00:02:25,650 --> 00:02:29,885
DOM 中定义的另一种选择方法是 querySelector

43
00:02:29,885 --> 00:02:34,300
Query-selector 让我们可以使用 CSS 选择器语法

44
00:02:34,300 --> 00:02:36,640
来选择页面上的 DOM 元素

45
00:02:36,640 --> 00:02:40,350
如果你对 CSS querySelector 语法不熟悉

46
00:02:40,350 --> 00:02:43,680
请暂停视频 查看讲师注释中的链接

47
00:02:43,680 --> 00:02:46,660
你可以通过该网页学习如何

48
00:02:46,660 --> 00:02:48,940
通过类名称或 ID 选择元素

49
00:02:48,940 --> 00:02:54,430
最简单、最常用的一个 CSS 选择器是类别选择器

50
00:02:54,430 --> 00:02:58,720
如果你在寻找的类别前面加上一个点 document querySelector

51
00:02:58,720 --> 00:03:01,995
会找到所有拥有该类的 DOM 节点

52
00:03:01,995 --> 00:03:07,175
例如 我想在文档中寻找任何类名称中

53
00:03:07,175 --> 00:03:11,335
含有 main 的 HTML 元素或 HTML 标签

54
00:03:11,335 --> 00:03:15,215
当我运行这个函数 控制台返回一个 div

55
00:03:15,215 --> 00:03:20,315
其类名称为 main 如果我把鼠标停在它上面

56
00:03:20,315 --> 00:03:23,475
聪明的 Chrome 明白我选择的是哪个元素

57
00:03:23,475 --> 00:03:25,730
如果我只想要 DOM 节点

58
00:03:25,730 --> 00:03:29,520
我可以点击 esc 键 就只有 HTML 视图窗口了

59
00:03:29,520 --> 00:03:32,490
然后试着寻找类名称为 main 的 div

60
00:03:32,490 --> 00:03:33,560
找到了 在这儿

61
00:03:33,560 --> 00:03:34,960
好了

62
00:03:34,960 --> 00:03:37,800
来看看你是否已经了解 CSS 选择器
